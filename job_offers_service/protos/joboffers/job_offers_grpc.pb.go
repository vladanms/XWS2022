// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.2.0
// - protoc             v3.20.1
// source: protos/job_offers.proto

package job_offers

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// JobOffersClient is the client API for JobOffers service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type JobOffersClient interface {
	CreateJobOffer(ctx context.Context, in *JobOffer, opts ...grpc.CallOption) (*JobOffersResponse, error)
	GetJobOffers(ctx context.Context, in *JobOffersRequest, opts ...grpc.CallOption) (*JobOffersResponse, error)
	RemoveJobOffer(ctx context.Context, in *JobOffer, opts ...grpc.CallOption) (*JobOffersRequest, error)
}

type jobOffersClient struct {
	cc grpc.ClientConnInterface
}

func NewJobOffersClient(cc grpc.ClientConnInterface) JobOffersClient {
	return &jobOffersClient{cc}
}

func (c *jobOffersClient) CreateJobOffer(ctx context.Context, in *JobOffer, opts ...grpc.CallOption) (*JobOffersResponse, error) {
	out := new(JobOffersResponse)
	err := c.cc.Invoke(ctx, "/JobOffers/CreateJobOffer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *jobOffersClient) GetJobOffers(ctx context.Context, in *JobOffersRequest, opts ...grpc.CallOption) (*JobOffersResponse, error) {
	out := new(JobOffersResponse)
	err := c.cc.Invoke(ctx, "/JobOffers/GetJobOffers", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *jobOffersClient) RemoveJobOffer(ctx context.Context, in *JobOffer, opts ...grpc.CallOption) (*JobOffersRequest, error) {
	out := new(JobOffersRequest)
	err := c.cc.Invoke(ctx, "/JobOffers/RemoveJobOffer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// JobOffersServer is the server API for JobOffers service.
// All implementations must embed UnimplementedJobOffersServer
// for forward compatibility
type JobOffersServer interface {
	CreateJobOffer(context.Context, *JobOffer) (*JobOffersResponse, error)
	GetJobOffers(context.Context, *JobOffersRequest) (*JobOffersResponse, error)
	RemoveJobOffer(context.Context, *JobOffer) (*JobOffersRequest, error)
	mustEmbedUnimplementedJobOffersServer()
}

// UnimplementedJobOffersServer must be embedded to have forward compatible implementations.
type UnimplementedJobOffersServer struct {
}

func (UnimplementedJobOffersServer) CreateJobOffer(context.Context, *JobOffer) (*JobOffersResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateJobOffer not implemented")
}
func (UnimplementedJobOffersServer) GetJobOffers(context.Context, *JobOffersRequest) (*JobOffersResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetJobOffers not implemented")
}
func (UnimplementedJobOffersServer) RemoveJobOffer(context.Context, *JobOffer) (*JobOffersRequest, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemoveJobOffer not implemented")
}
func (UnimplementedJobOffersServer) mustEmbedUnimplementedJobOffersServer() {}

// UnsafeJobOffersServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to JobOffersServer will
// result in compilation errors.
type UnsafeJobOffersServer interface {
	mustEmbedUnimplementedJobOffersServer()
}

func RegisterJobOffersServer(s grpc.ServiceRegistrar, srv JobOffersServer) {
	s.RegisterService(&JobOffers_ServiceDesc, srv)
}

func _JobOffers_CreateJobOffer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(JobOffer)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(JobOffersServer).CreateJobOffer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/JobOffers/CreateJobOffer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(JobOffersServer).CreateJobOffer(ctx, req.(*JobOffer))
	}
	return interceptor(ctx, in, info, handler)
}

func _JobOffers_GetJobOffers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(JobOffersRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(JobOffersServer).GetJobOffers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/JobOffers/GetJobOffers",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(JobOffersServer).GetJobOffers(ctx, req.(*JobOffersRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _JobOffers_RemoveJobOffer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(JobOffer)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(JobOffersServer).RemoveJobOffer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/JobOffers/RemoveJobOffer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(JobOffersServer).RemoveJobOffer(ctx, req.(*JobOffer))
	}
	return interceptor(ctx, in, info, handler)
}

// JobOffers_ServiceDesc is the grpc.ServiceDesc for JobOffers service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var JobOffers_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "JobOffers",
	HandlerType: (*JobOffersServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateJobOffer",
			Handler:    _JobOffers_CreateJobOffer_Handler,
		},
		{
			MethodName: "GetJobOffers",
			Handler:    _JobOffers_GetJobOffers_Handler,
		},
		{
			MethodName: "RemoveJobOffer",
			Handler:    _JobOffers_RemoveJobOffer_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "protos/job_offers.proto",
}
